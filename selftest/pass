
sub .33 {                    # ( n -- ) print as nnn:nnn
   <hash                    
   bl hold
   3:hash
   ':' hold
   3:hash
   hash> type$
}

sub accumulate { 10 * + }
sub emptyall  {
   depth$ times drop$
   depth times drop
}

sub emptybuffer {
   movefilestart blockbegin
   movefileend    blockend
   blockkill                # fails if buffer empty. force to continue
}

sub testfilename { var$ new }


sub beforealltests {
   emptybuffer
   256 bl repeat$ testfilename store$           # initialize file name variable to 256 chars
   "selftest started" type$ cr
   }


sub afteralltests {
   "selftest finished" type$ cr
   }


sub pass   {    # ( got wants testnum -- )
   >r
      dup2 equals
      depth depth$ accumulate 03 equals and
      if "PASS" else "FAIL" endif type$
   r>
   " test " type$ .33
   "wanted" type$ 9 .r
   ", got"  type$ 9 .r
   3 spaces testfilename fetch$ type$ cr
   emptyall
   filesave
}

